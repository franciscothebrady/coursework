R.version.string
pums <- pums %>%
mutate(medicaid = ifelse(HINS4 == 1, 1, 0),
snap = ifelse(FS == 1, 1, 0))
library(tidycensus)
library(dplyr)
library(janitor)
pums <- get_pums(variables = c('AGEP', 'FS', 'HINS4', 'RAC1P',
'HISP',
'HINCP'), state = 'IL',
year = 2020, survey = 'acs5', recode = TRUE)
pums_raw <- pums
pums <- pums %>%
mutate(medicaid = ifelse(HINS4 == 1, 1, 0),
snap = ifelse(FS == 1, 1, 0))
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, max_val) %>%
distinct()
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, min_val) %>%
distinct()
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, contains('min')) %>%
distinct()
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, contains('min')) %>%
distinct() %>% View
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, val_min, val_label)) %>%
pums_variables %>% filter(var_code == 'HINS4') %>%
select(var_code, var_label, val_min, val_label) %>%
distinct() %>% View
pums <- pums %>%
mutate(medicaid = ifelse(HINS4 == 1, 1, 0),
snap = ifelse(FS == 1, 1, 0))
tabyl(pums, RAC1P_label)[1]
pums <- pums %>%
mutate(race = case_when(RAC1P_label =='White alone' ~ RAC1P_label,
RAC1P_label == 'Black or African American alone' ~ RAC1P_label,
RAC1P_label %in% c('American Indian alone','Alaska Native alone',
'American Indian and Alaska Native tribes specified; or American Indian or Alaska Native, not specified and no other races') ~ 'AIAN',
RAC1P_label %in% c('Asian alone','Native Hawaiian and Other Pacific Islander alone') ~ 'AAPI',
RAC1P_label %in% c('Some Other Race alone','Two or More Races') ~ 'Other/Multiple')
)
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>% View
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(2))) %>% View
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% View
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2)))
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% View
pums <- get_pums(variables = c('AGEP', 'FS', 'HINS4', 'RAC1P',
'HISP',
'HINCP',
'ADJINC'), state = 'IL',
year = 2020, survey = 'acs5', recode = TRUE)
# health ins
tabyl(pums, HINS4)
pums_raw <- pums
pums <- pums %>%
mutate(medicaid = ifelse(HINS4 == 1, 1, 0),
snap = ifelse(FS == 1, 1, 0))
tabyl(pums, RAC1P_label)[1]
pums <- pums %>%
mutate(race = case_when(RAC1P_label =='White alone' ~ RAC1P_label,
RAC1P_label == 'Black or African American alone' ~ RAC1P_label,
RAC1P_label %in% c('American Indian alone','Alaska Native alone',
'American Indian and Alaska Native tribes specified; or American Indian or Alaska Native, not specified and no other races') ~ 'AIAN',
RAC1P_label %in% c('Asian alone','Native Hawaiian and Other Pacific Islander alone') ~ 'AAPI',
RAC1P_label %in% c('Some Other Race alone','Two or More Races') ~ 'Other/Multiple')
)
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% View
0)
pums %>%
mutate(household_income = ifelse(HINCP > 0,
HINCP*ADJINC,
0))
tabyl(pums$HINCP)
str(pums$HINCP)
glimpse(pums$ADJINC)
glimpse(pums$ADJINC_label)
pums %>%
mutate(household_income = ifelse(HINCP > 0,
HINCP*as.numeric(ADJINC),
0))
pums <- pums %>%
mutate(household_income = ifelse(HINCP > 0,
HINCP*as.numeric(ADJINC),
0))
# medicaid snap HH income
bind_rows(
pums %>%
filter(SPORDER == 1,
medicaid == 1) %>%
weighted.mean(household_income, w = WGTP),
pums %>%
filter(SPORDER == 1,
snap == 1) %>%
weighted.mean(household_income, w = WGTP)
)
# medicaid snap HH income
bind_rows(
pums %>%
filter(SPORDER == 1,
medicaid == 1) %>%
mutate(household_income = weighted.mean(household_income, w = WGTP)),
pums %>%
filter(SPORDER == 1,
snap == 1) %>%
mutate(household_income = weighted.mean(household_income, w = WGTP))
)
# medicaid snap HH income
bind_rows(
pums %>%
filter(SPORDER == 1,
medicaid == 1) %>%
summarise(household_income = weighted.mean(household_income, w = WGTP)),
pums %>%
filter(SPORDER == 1,
snap == 1) %>%
summarise(household_income = weighted.mean(household_income, w = WGTP))
)
# medicaid snap HH income
bind_rows(
pums %>%
filter(SPORDER == 1,
medicaid == 1) %>%
summarise(program = 'medicaid',
household_income = weighted.mean(household_income, w = WGTP)),
pums %>%
filter(SPORDER == 1,
snap == 1) %>%
summarise(program = 'snap',
household_income = weighted.mean(household_income, w = WGTP))
)
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% kableExtra::as_image()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% kableExtra::kable_as_image()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>% kableExtra::kable_classic_2()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>%
knitr::kable() %>%
kableExtra::kable_classic_2()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>%
knitr::kable(format = 'simple') %>%
kableExtra::kable_classic_2()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>%
knitr::kable(format = 'pandoc') %>%
kableExtra::kable_classic_2()
# medicaid/snap by race
pums %>%
group_by(race) %>%
summarise(medicaid = weighted.mean(medicaid, w = PWGTP),
snap = weighted.mean(snap, w = PWGTP)) %>%
mutate(across(where(is.numeric), ~round(.x, 2))) %>%
knitr::kable(format = 'pipe') %>%
kableExtra::kable_classic_2()
223+75
223/298
107/(107+21)
107+21
250/300
50/300
250/300
1 - (250/300)
5/100
250/300
5/100
40/100
1-.4
250/300
1-(250/300)
50 - 250
50 - 250
(50 - 250) / 50
50 - 250
-200 / 50
250/300
ppv <- .96
pcv <- (250/300)
ppv
ve <- (ppv - pcv)/ (ppv * (1 - pcv))
ve
(ppv - pcv)
pcv
ppv
ppv
1 - pcv
(ppv * (1 - pcv)
)
1 - pcv
(ppv * (1 - pcv))
ve <-
(ppv - pcv)
num <- (ppv - pcv)
denom <- (ppv * (1 - pcv))
ve <- num / denom
ve
250/300
risk <- (1 - pcv)
risk
denom <- (ppv * risk)
ve <- num / denom
ve
risk
num
denom
.96*.16
pcv
num <- (ppv - pcv)
risk <- (1 - pcv)
risk
denom <- ppv * risk
denom
pcv
ppv
ppv*risk
.96*.16
.96-.83
df <- tibble::tibble(year = 2019:2014,
monitored = c(198,210,
185,209,
203,160),
action = c(41,60,43,
43,65,50))
df
library(dplyr)
df <- df %>%
mutate(rate = action/monitored)
library(ggplot2)
ggplot(df) +
geom_line(aes(x = year, y = rate))
ggplot(df) +
geom_bar(aes(x = year, y  = action)) +
geom_line(aes(x = year, y = rate))
ggplot(df) +
geom_col(aes(x = year, y  = action)) +
geom_line(aes(x = year, y = rate))
ggplot(df) +
geom_col(aes(x = year, y  = rate))
mean(df$monitored)
mean(df$action)
df
df %>% arrange(rate)
c(4,
7,
4,
6,
6,
6,
5,
9,
6,
1,
4,
4,
2,
7,
17)
sum(c(4,
7,
4,
6,
6,
6,
5,
9,
6,
1,
4,
4,
2,
7,
17)
)
library(dplyr)
library(rvest)
url <- 'https://rackham.umich.edu/funding/stipend-disbursement-calendar/'
cal <- read_html(url) %>%
html_table()
View(cal)
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest()
cal
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest(X1, X2)
cal <- read_html(url) %>%
html_table(trim = T) %>%
select(Date = X2)
cal <- read_html(url) %>%
html_table(trim = T) %>%
select(Date = unlist(X2))
cal <- read_html(url) %>%
html_table(trim = T) %>%
dplyr::select(Date = unlist(X2))
cal <- read_html(url) %>%
html_table(trim = T) %>%
data_frame()
cal <- read_html(url) %>%
html_table(trim = T) %>%
tibble(X1, X2)
cal <- read_html(url) %>%
html_table(trim = T) %>%
tibble()
View(cal)
cal <- read_html(url) %>%
html_table(trim = T) %>%
unlist
cal <- read_html(url) %>%
html_table(trim = T)
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest()
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest(cols = c())
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest(cols = c(X1, X2))
cal[[1]]
cal <- read_html(url) %>%
html_table(trim = T) %>% tidyr::unnest(cols = cal[[1]])
cal <- read_html(url) %>%
html_table(trim = T, header = T)
View(cal)
cal <- cal[[1]]
cal <- cal[[1]]
url <- 'https://rackham.umich.edu/funding/stipend-disbursement-calendar/'
cal <- read_html(url) %>%
html_table(trim = T, header = T)
cal <- cal[[1]]
cal
cal$`Fall and Winter Terms`
as.Date(cal$`Fall and Winter Terms`)
p1 <- .177
p2 <- .134
n1 <- 575
n2 <- 770
p2*(1 - p1)
p1*(1 - p1)
p1*(1 - p1) / n1
(p1*(1 - p1)) / n1
first <- (p1*(1 - p1)) / n1
second <- (p2*(1 - p2)) / n2
sqrt(first + second)
second
chisq.test(x = .177, y = .134)
chisq.test(x = c(p1, p2))
chisq.test
(p1*(1 - p1)) / n1
first <- p1*(1 - p1) / n1
second <- p2*(1 - p2) / n2
first
costs <- 58000 + 6000*L
l l <- 1:4
l <- 1:4
costs <- 58000 + 6000*l
costs
tibble::tibble(workers = 1:4)
costs <- tibble::tibble(workers = 1:4)
costs$cost <- 58000 + 6000*l
costs <- tibble::tibble(workers = 0:4)
costs$cost <- 58000 + 6000*l
costs
costs <- tibble::tibble(workers = 0:4)
costs$cost <- 58000 + 6000*l
costs$cost <- 58000 + 6000*workers
costs <- tibble::tibble(workers = 0:4)
costs$cost <- 58000 + 6000*workers
costs$cost <- 58000 + 6000*costs$workers
costs
costs$cost <- 58000*costs$workers +
6000*costs$workers
costs <- tibble::tibble(workers = 0:4)
costs$cost <- 58000*costs$workers +
6000*costs$workers
costs
6000+58000
costs$clients <- c(0,11,20,27,32)
costs
costs$pay <- 10000*costs$clients
costs
costs$marginal_cost <- costs$cost - lag(costs$cost, 1)
costs
1280000-64000
128000-64000
costs$marginal_cost <- 64000
costs
costs$marginal_cost <- c(0,64000)
costs
costs$marginal_cost <- 64000
costs$marginal_cost[1] <- 0
costs
costs <- tibble::tibble(workers = 0:4)
costs$cost <- 58000*costs$workers +
6000*costs$workers
costs$clients <- c(0,11,20,27,32)
costs$profits <- 10000*costs$clients
costs$marginal_cost <- 64000
costs$marginal_cost[1] <- 0
costs$marginal_benefit <- costs$profits
costs
View(costs)
costs$marginal_benefit <- costs$profits - lag(costs$profits, 1)
View(costs)
costs$profits
lag(costs$profits, 1)
library(dplyr)
costs <- costs %>%
mutate(marginal_benefit = profit - lag(profit, 1))
costs
costs <- costs %>%
mutate(marginal_benefit = profits - lag(profits, 1))
costs
setwd('Documents/umich/coursework/529_stats/assignments/ps1/')
install.packages('tinytex')
tinytex::install_tinytex()
